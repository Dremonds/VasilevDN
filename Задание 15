Ответы к заданию

 Описать функцию PowerA3(A, B), вычисляющую третью степень числа A и возвращающую ее в переменной B (A — входной, B — выходной параметр; оба параметра являются вещественными). С помощью этой функции найти третьи степени пяти данных чисел.

#include <iostream>

using namespace std;

int PowerA3(float A) {//создаем вызываемую функцию
	return  A * A* A ;
}
int main() {
	float n;
	for (int i=0; i < 5; i++) {
		cin >> n;
		cout << PowerA3(n)<<endl;
	}
	return 0;
}



Описать функцию Sign(X) целого типа, возвращающую для вещественного числа X следующие значения:
 −1, если X < 0; 0, если X = 0; 1, если X > 0. 
С помощью этой функции найти значение выражения Sign(A) + Sign(B) для данных вещественных чисел A и B.

#include <iostream>

using namespace std;

int Sign(float X) {
	if (X < 0)
		X = -1;
	if (X == 0)
		X = 0;
	if (X > 0)
		X = 1;
	return X;
}
int main() {
	float A, B;
	cout << "B: ";
	cin >> B;
	cout << "A: ";
	cin >> A;
	cout << Sign(A) + Sign(B);
	return 0;
}

Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца, заключенного между двумя окружностями с общим центром и радиусами R1 и R2 (R1 и R2 — вещественные, R1 > R2). С ее помощью найти площади трех колец, для которых даны внешние и внутренние радиусы.	

#include <iostream>

using namespace std;

int RingS(float r1, float r2){
	return 3.14 * (r1 * r1 - r2 * r2);
}
int main() {
	setlocale(LC_ALL, "rus");
	float R1, R2;
	for (int i = 0; i < 3; i++) {
		cout << "Введите R1: ";
		cin >> R1;
		cout << "Введение R2: ";
		cin >> R2;
		cout << RingS(R1,R2) << endl;
	}
	return 0;
}


 Описать функцию Quarter(x, y) целого типа, определяющую номер координатной четверти, в которой находится точка с ненулевыми вещественными координатами (x, y). С помощью этой функции найти номера координатных четвертей для трех точек с данными ненулевыми координатами.


#include <iostream>

using namespace std;

int Quarter(float x, float y){
	int h;
	if (x > 0 && y > 0) {
		cout << "Первая координатная четверть: ";
		h = 1;
	}
	if (x > 0 && y < 0) {
		cout << "Четвертая координатная четверть: ";
		h = 4;
	}
	if (x < 0 && y> 0) {
		cout << "Вторая координатная четверть: ";
		h = 2;
	}
	if (x < 0 && y < 0) {
		cout << "Третья координатная четверть: ";
		h = 3;
	}
		if (x == 0 && y == 0){
			cout << "НУЛЕВЫЕ КООРДИНАТЫ: ";
			h = 0;
	}
	return h;
}
int main() {
	setlocale(LC_ALL, "rus");
	float X, Y;
	for (int i = 0; i < 3; i++) {
		cout << "X: ";
		cin >> X;
		cout << "Y: ";
		cin >> Y;
		if (X == 0 || Y == 0) {
			cout << "Одна координата не может быть 0" << endl;
			i--;
			continue;
		}
		cout << Quarter(X, Y) << endl;
	}
	return 0;
}



Описать функцию Fact2(N) вещественного типа, вычисляющую двойной факториал: 
N!! = 1·3·5·. . .·N, если N — нечетное; 
N!! = 2·4·6·. . .·N, если N — четное (N > 0 — параметр целого типа; вещественное возвращаемое значение используется для того, чтобы избежать целочисленного переполнения при больших значениях N).
#include <iostream>

using namespace std;

float Fact2(int n){
	float k=n, temp;
	if (n % 2 == 0) {//Для четного значения
		for (int i = 2; i < n; i += 2) {
			temp = k * i;
			k = temp;
		}
	}
	else {//Для нечетного значения
		for (int j = 1; j < n; j += 2) {
			temp = k * j;
			k = temp;
		}
	}
	return k;
}
int main() {
	setlocale(LC_ALL, "rus");
	float N;
	cout << "N: ";
	cin >> N;
	cout << "Двойной факториал числа " << N << " равен: " << Fact2(N);
	return 0;
}
